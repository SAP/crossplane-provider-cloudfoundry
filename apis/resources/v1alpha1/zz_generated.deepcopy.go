//go:build !ignore_autogenerated

/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *App) DeepCopyInto(out *App) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new App.
func (in *App) DeepCopy() *App {
	if in == nil {
		return nil
	}
	out := new(App)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *App) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppList) DeepCopyInto(out *AppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]App, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppList.
func (in *AppList) DeepCopy() *AppList {
	if in == nil {
		return nil
	}
	out := new(AppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppObservation) DeepCopyInto(out *AppObservation) {
	*out = *in
	in.Resource.DeepCopyInto(&out.Resource)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppObservation.
func (in *AppObservation) DeepCopy() *AppObservation {
	if in == nil {
		return nil
	}
	out := new(AppObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppParameters) DeepCopyInto(out *AppParameters) {
	*out = *in
	in.SpaceReference.DeepCopyInto(&out.SpaceReference)
	if in.Buildpacks != nil {
		in, out := &in.Buildpacks, &out.Buildpacks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Stack != nil {
		in, out := &in.Stack, &out.Stack
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Docker != nil {
		in, out := &in.Docker, &out.Docker
		*out = new(DockerConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make([]RouteConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServiceBindingConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Processes != nil {
		in, out := &in.Processes, &out.Processes
		*out = make([]ProcessConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.ReadinessHealthCheckConfiguration.DeepCopyInto(&out.ReadinessHealthCheckConfiguration)
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.LogRateLimitPerSecond != nil {
		in, out := &in.LogRateLimitPerSecond, &out.LogRateLimitPerSecond
		*out = new(string)
		**out = **in
	}
	in.ResourceMetadata.DeepCopyInto(&out.ResourceMetadata)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppParameters.
func (in *AppParameters) DeepCopy() *AppParameters {
	if in == nil {
		return nil
	}
	out := new(AppParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpec) DeepCopyInto(out *AppSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpec.
func (in *AppSpec) DeepCopy() *AppSpec {
	if in == nil {
		return nil
	}
	out := new(AppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppStatus) DeepCopyInto(out *AppStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppStatus.
func (in *AppStatus) DeepCopy() *AppStatus {
	if in == nil {
		return nil
	}
	out := new(AppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerConfiguration) DeepCopyInto(out *DockerConfiguration) {
	*out = *in
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(v1.SecretReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerConfiguration.
func (in *DockerConfiguration) DeepCopy() *DockerConfiguration {
	if in == nil {
		return nil
	}
	out := new(DockerConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Domain) DeepCopyInto(out *Domain) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Domain.
func (in *Domain) DeepCopy() *Domain {
	if in == nil {
		return nil
	}
	out := new(Domain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Domain) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainList) DeepCopyInto(out *DomainList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Domain, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainList.
func (in *DomainList) DeepCopy() *DomainList {
	if in == nil {
		return nil
	}
	out := new(DomainList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainObservation) DeepCopyInto(out *DomainObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Internal != nil {
		in, out := &in.Internal, &out.Internal
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.RouterGroup != nil {
		in, out := &in.RouterGroup, &out.RouterGroup
		*out = new(string)
		**out = **in
	}
	if in.SharedOrgs != nil {
		in, out := &in.SharedOrgs, &out.SharedOrgs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportedProtocols != nil {
		in, out := &in.SupportedProtocols, &out.SupportedProtocols
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainObservation.
func (in *DomainObservation) DeepCopy() *DomainObservation {
	if in == nil {
		return nil
	}
	out := new(DomainObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainParameters) DeepCopyInto(out *DomainParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.SubDomain != nil {
		in, out := &in.SubDomain, &out.SubDomain
		*out = new(string)
		**out = **in
	}
	if in.Internal != nil {
		in, out := &in.Internal, &out.Internal
		*out = new(bool)
		**out = **in
	}
	if in.RouterGroup != nil {
		in, out := &in.RouterGroup, &out.RouterGroup
		*out = new(string)
		**out = **in
	}
	in.OrgReference.DeepCopyInto(&out.OrgReference)
	if in.SharedOrgs != nil {
		in, out := &in.SharedOrgs, &out.SharedOrgs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainParameters.
func (in *DomainParameters) DeepCopy() *DomainParameters {
	if in == nil {
		return nil
	}
	out := new(DomainParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainReference) DeepCopyInto(out *DomainReference) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainRef != nil {
		in, out := &in.DomainRef, &out.DomainRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainSelector != nil {
		in, out := &in.DomainSelector, &out.DomainSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainReference.
func (in *DomainReference) DeepCopy() *DomainReference {
	if in == nil {
		return nil
	}
	out := new(DomainReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainSpec) DeepCopyInto(out *DomainSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainSpec.
func (in *DomainSpec) DeepCopy() *DomainSpec {
	if in == nil {
		return nil
	}
	out := new(DomainSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainStatus) DeepCopyInto(out *DomainStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainStatus.
func (in *DomainStatus) DeepCopy() *DomainStatus {
	if in == nil {
		return nil
	}
	out := new(DomainStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckConfiguration) DeepCopyInto(out *HealthCheckConfiguration) {
	*out = *in
	if in.HealthCheckType != nil {
		in, out := &in.HealthCheckType, &out.HealthCheckType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPEndpoint != nil {
		in, out := &in.HealthCheckHTTPEndpoint, &out.HealthCheckHTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckInterval != nil {
		in, out := &in.HealthCheckInterval, &out.HealthCheckInterval
		*out = new(uint)
		**out = **in
	}
	if in.HealthCheckInvocationTimeout != nil {
		in, out := &in.HealthCheckInvocationTimeout, &out.HealthCheckInvocationTimeout
		*out = new(uint)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckConfiguration.
func (in *HealthCheckConfiguration) DeepCopy() *HealthCheckConfiguration {
	if in == nil {
		return nil
	}
	out := new(HealthCheckConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LastOperation) DeepCopyInto(out *LastOperation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LastOperation.
func (in *LastOperation) DeepCopy() *LastOperation {
	if in == nil {
		return nil
	}
	out := new(LastOperation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceInfo) DeepCopyInto(out *MaintenanceInfo) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceInfo.
func (in *MaintenanceInfo) DeepCopy() *MaintenanceInfo {
	if in == nil {
		return nil
	}
	out := new(MaintenanceInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Managed) DeepCopyInto(out *Managed) {
	*out = *in
	if in.ServicePlan != nil {
		in, out := &in.ServicePlan, &out.ServicePlan
		*out = new(ServicePlanParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.JSONParams != nil {
		in, out := &in.JSONParams, &out.JSONParams
		*out = new(string)
		**out = **in
	}
	if in.ParametersSecretRef != nil {
		in, out := &in.ParametersSecretRef, &out.ParametersSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	in.MaintenanceInfo.DeepCopyInto(&out.MaintenanceInfo)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Managed.
func (in *Managed) DeepCopy() *Managed {
	if in == nil {
		return nil
	}
	out := new(Managed)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Member) DeepCopyInto(out *Member) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Member.
func (in *Member) DeepCopy() *Member {
	if in == nil {
		return nil
	}
	out := new(Member)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemberList) DeepCopyInto(out *MemberList) {
	*out = *in
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*Member, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Member)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemberList.
func (in *MemberList) DeepCopy() *MemberList {
	if in == nil {
		return nil
	}
	out := new(MemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgMembers) DeepCopyInto(out *OrgMembers) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgMembers.
func (in *OrgMembers) DeepCopy() *OrgMembers {
	if in == nil {
		return nil
	}
	out := new(OrgMembers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrgMembers) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgMembersList) DeepCopyInto(out *OrgMembersList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrgMembers, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgMembersList.
func (in *OrgMembersList) DeepCopy() *OrgMembersList {
	if in == nil {
		return nil
	}
	out := new(OrgMembersList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrgMembersList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgMembersParameters) DeepCopyInto(out *OrgMembersParameters) {
	*out = *in
	in.MemberList.DeepCopyInto(&out.MemberList)
	in.OrgReference.DeepCopyInto(&out.OrgReference)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgMembersParameters.
func (in *OrgMembersParameters) DeepCopy() *OrgMembersParameters {
	if in == nil {
		return nil
	}
	out := new(OrgMembersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgMembersSpec) DeepCopyInto(out *OrgMembersSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgMembersSpec.
func (in *OrgMembersSpec) DeepCopy() *OrgMembersSpec {
	if in == nil {
		return nil
	}
	out := new(OrgMembersSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgMembersStatus) DeepCopyInto(out *OrgMembersStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgMembersStatus.
func (in *OrgMembersStatus) DeepCopy() *OrgMembersStatus {
	if in == nil {
		return nil
	}
	out := new(OrgMembersStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgObservation) DeepCopyInto(out *OrgObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = new(string)
		**out = **in
	}
	if in.Suspended != nil {
		in, out := &in.Suspended, &out.Suspended
		*out = new(bool)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgObservation.
func (in *OrgObservation) DeepCopy() *OrgObservation {
	if in == nil {
		return nil
	}
	out := new(OrgObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgParameters) DeepCopyInto(out *OrgParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Suspended != nil {
		in, out := &in.Suspended, &out.Suspended
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgParameters.
func (in *OrgParameters) DeepCopy() *OrgParameters {
	if in == nil {
		return nil
	}
	out := new(OrgParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgQuota) DeepCopyInto(out *OrgQuota) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgQuota.
func (in *OrgQuota) DeepCopy() *OrgQuota {
	if in == nil {
		return nil
	}
	out := new(OrgQuota)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrgQuota) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgQuotaInitParameters) DeepCopyInto(out *OrgQuotaInitParameters) {
	*out = *in
	if in.AllowPaidServicePlans != nil {
		in, out := &in.AllowPaidServicePlans, &out.AllowPaidServicePlans
		*out = new(bool)
		**out = **in
	}
	if in.InstanceMemory != nil {
		in, out := &in.InstanceMemory, &out.InstanceMemory
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Orgs != nil {
		in, out := &in.Orgs, &out.Orgs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TotalAppInstances != nil {
		in, out := &in.TotalAppInstances, &out.TotalAppInstances
		*out = new(float64)
		**out = **in
	}
	if in.TotalAppLogRateLimit != nil {
		in, out := &in.TotalAppLogRateLimit, &out.TotalAppLogRateLimit
		*out = new(float64)
		**out = **in
	}
	if in.TotalAppTasks != nil {
		in, out := &in.TotalAppTasks, &out.TotalAppTasks
		*out = new(float64)
		**out = **in
	}
	if in.TotalMemory != nil {
		in, out := &in.TotalMemory, &out.TotalMemory
		*out = new(float64)
		**out = **in
	}
	if in.TotalPrivateDomains != nil {
		in, out := &in.TotalPrivateDomains, &out.TotalPrivateDomains
		*out = new(float64)
		**out = **in
	}
	if in.TotalRoutePorts != nil {
		in, out := &in.TotalRoutePorts, &out.TotalRoutePorts
		*out = new(float64)
		**out = **in
	}
	if in.TotalRoutes != nil {
		in, out := &in.TotalRoutes, &out.TotalRoutes
		*out = new(float64)
		**out = **in
	}
	if in.TotalServiceKeys != nil {
		in, out := &in.TotalServiceKeys, &out.TotalServiceKeys
		*out = new(float64)
		**out = **in
	}
	if in.TotalServices != nil {
		in, out := &in.TotalServices, &out.TotalServices
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgQuotaInitParameters.
func (in *OrgQuotaInitParameters) DeepCopy() *OrgQuotaInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrgQuotaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgQuotaList) DeepCopyInto(out *OrgQuotaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrgQuota, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgQuotaList.
func (in *OrgQuotaList) DeepCopy() *OrgQuotaList {
	if in == nil {
		return nil
	}
	out := new(OrgQuotaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrgQuotaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgQuotaObservation) DeepCopyInto(out *OrgQuotaObservation) {
	*out = *in
	if in.AllowPaidServicePlans != nil {
		in, out := &in.AllowPaidServicePlans, &out.AllowPaidServicePlans
		*out = new(bool)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceMemory != nil {
		in, out := &in.InstanceMemory, &out.InstanceMemory
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Orgs != nil {
		in, out := &in.Orgs, &out.Orgs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TotalAppInstances != nil {
		in, out := &in.TotalAppInstances, &out.TotalAppInstances
		*out = new(float64)
		**out = **in
	}
	if in.TotalAppLogRateLimit != nil {
		in, out := &in.TotalAppLogRateLimit, &out.TotalAppLogRateLimit
		*out = new(float64)
		**out = **in
	}
	if in.TotalAppTasks != nil {
		in, out := &in.TotalAppTasks, &out.TotalAppTasks
		*out = new(float64)
		**out = **in
	}
	if in.TotalMemory != nil {
		in, out := &in.TotalMemory, &out.TotalMemory
		*out = new(float64)
		**out = **in
	}
	if in.TotalPrivateDomains != nil {
		in, out := &in.TotalPrivateDomains, &out.TotalPrivateDomains
		*out = new(float64)
		**out = **in
	}
	if in.TotalRoutePorts != nil {
		in, out := &in.TotalRoutePorts, &out.TotalRoutePorts
		*out = new(float64)
		**out = **in
	}
	if in.TotalRoutes != nil {
		in, out := &in.TotalRoutes, &out.TotalRoutes
		*out = new(float64)
		**out = **in
	}
	if in.TotalServiceKeys != nil {
		in, out := &in.TotalServiceKeys, &out.TotalServiceKeys
		*out = new(float64)
		**out = **in
	}
	if in.TotalServices != nil {
		in, out := &in.TotalServices, &out.TotalServices
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgQuotaObservation.
func (in *OrgQuotaObservation) DeepCopy() *OrgQuotaObservation {
	if in == nil {
		return nil
	}
	out := new(OrgQuotaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgQuotaParameters) DeepCopyInto(out *OrgQuotaParameters) {
	*out = *in
	if in.AllowPaidServicePlans != nil {
		in, out := &in.AllowPaidServicePlans, &out.AllowPaidServicePlans
		*out = new(bool)
		**out = **in
	}
	if in.InstanceMemory != nil {
		in, out := &in.InstanceMemory, &out.InstanceMemory
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Orgs != nil {
		in, out := &in.Orgs, &out.Orgs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TotalAppInstances != nil {
		in, out := &in.TotalAppInstances, &out.TotalAppInstances
		*out = new(float64)
		**out = **in
	}
	if in.TotalAppLogRateLimit != nil {
		in, out := &in.TotalAppLogRateLimit, &out.TotalAppLogRateLimit
		*out = new(float64)
		**out = **in
	}
	if in.TotalAppTasks != nil {
		in, out := &in.TotalAppTasks, &out.TotalAppTasks
		*out = new(float64)
		**out = **in
	}
	if in.TotalMemory != nil {
		in, out := &in.TotalMemory, &out.TotalMemory
		*out = new(float64)
		**out = **in
	}
	if in.TotalPrivateDomains != nil {
		in, out := &in.TotalPrivateDomains, &out.TotalPrivateDomains
		*out = new(float64)
		**out = **in
	}
	if in.TotalRoutePorts != nil {
		in, out := &in.TotalRoutePorts, &out.TotalRoutePorts
		*out = new(float64)
		**out = **in
	}
	if in.TotalRoutes != nil {
		in, out := &in.TotalRoutes, &out.TotalRoutes
		*out = new(float64)
		**out = **in
	}
	if in.TotalServiceKeys != nil {
		in, out := &in.TotalServiceKeys, &out.TotalServiceKeys
		*out = new(float64)
		**out = **in
	}
	if in.TotalServices != nil {
		in, out := &in.TotalServices, &out.TotalServices
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgQuotaParameters.
func (in *OrgQuotaParameters) DeepCopy() *OrgQuotaParameters {
	if in == nil {
		return nil
	}
	out := new(OrgQuotaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgQuotaSpec) DeepCopyInto(out *OrgQuotaSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgQuotaSpec.
func (in *OrgQuotaSpec) DeepCopy() *OrgQuotaSpec {
	if in == nil {
		return nil
	}
	out := new(OrgQuotaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgQuotaStatus) DeepCopyInto(out *OrgQuotaStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgQuotaStatus.
func (in *OrgQuotaStatus) DeepCopy() *OrgQuotaStatus {
	if in == nil {
		return nil
	}
	out := new(OrgQuotaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgReference) DeepCopyInto(out *OrgReference) {
	*out = *in
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.OrgName != nil {
		in, out := &in.OrgName, &out.OrgName
		*out = new(string)
		**out = **in
	}
	if in.OrgRef != nil {
		in, out := &in.OrgRef, &out.OrgRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgSelector != nil {
		in, out := &in.OrgSelector, &out.OrgSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgReference.
func (in *OrgReference) DeepCopy() *OrgReference {
	if in == nil {
		return nil
	}
	out := new(OrgReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgRole) DeepCopyInto(out *OrgRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgRole.
func (in *OrgRole) DeepCopy() *OrgRole {
	if in == nil {
		return nil
	}
	out := new(OrgRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrgRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgRoleList) DeepCopyInto(out *OrgRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrgRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgRoleList.
func (in *OrgRoleList) DeepCopy() *OrgRoleList {
	if in == nil {
		return nil
	}
	out := new(OrgRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrgRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgRoleObservation) DeepCopyInto(out *OrgRoleObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgRoleObservation.
func (in *OrgRoleObservation) DeepCopy() *OrgRoleObservation {
	if in == nil {
		return nil
	}
	out := new(OrgRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgRoleParameters) DeepCopyInto(out *OrgRoleParameters) {
	*out = *in
	in.OrgReference.DeepCopyInto(&out.OrgReference)
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgRoleParameters.
func (in *OrgRoleParameters) DeepCopy() *OrgRoleParameters {
	if in == nil {
		return nil
	}
	out := new(OrgRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgRoleSpec) DeepCopyInto(out *OrgRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgRoleSpec.
func (in *OrgRoleSpec) DeepCopy() *OrgRoleSpec {
	if in == nil {
		return nil
	}
	out := new(OrgRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgRoleStatus) DeepCopyInto(out *OrgRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgRoleStatus.
func (in *OrgRoleStatus) DeepCopy() *OrgRoleStatus {
	if in == nil {
		return nil
	}
	out := new(OrgRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgSpec) DeepCopyInto(out *OrgSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgSpec.
func (in *OrgSpec) DeepCopy() *OrgSpec {
	if in == nil {
		return nil
	}
	out := new(OrgSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgStatus) DeepCopyInto(out *OrgStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgStatus.
func (in *OrgStatus) DeepCopy() *OrgStatus {
	if in == nil {
		return nil
	}
	out := new(OrgStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Organization) DeepCopyInto(out *Organization) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Organization.
func (in *Organization) DeepCopy() *Organization {
	if in == nil {
		return nil
	}
	out := new(Organization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Organization) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationList) DeepCopyInto(out *OrganizationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Organization, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationList.
func (in *OrganizationList) DeepCopy() *OrganizationList {
	if in == nil {
		return nil
	}
	out := new(OrganizationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessConfiguration) DeepCopyInto(out *ProcessConfiguration) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = new(string)
		**out = **in
	}
	if in.DiskQuota != nil {
		in, out := &in.DiskQuota, &out.DiskQuota
		*out = new(string)
		**out = **in
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = new(uint)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(uint)
		**out = **in
	}
	in.HealthCheckConfiguration.DeepCopyInto(&out.HealthCheckConfiguration)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessConfiguration.
func (in *ProcessConfiguration) DeepCopy() *ProcessConfiguration {
	if in == nil {
		return nil
	}
	out := new(ProcessConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadinessHealthCheckConfiguration) DeepCopyInto(out *ReadinessHealthCheckConfiguration) {
	*out = *in
	if in.ReadinessHealthCheckType != nil {
		in, out := &in.ReadinessHealthCheckType, &out.ReadinessHealthCheckType
		*out = new(string)
		**out = **in
	}
	if in.ReadinessHealthCheckHTTPEndpoint != nil {
		in, out := &in.ReadinessHealthCheckHTTPEndpoint, &out.ReadinessHealthCheckHTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ReadinessHealthCheckInterval != nil {
		in, out := &in.ReadinessHealthCheckInterval, &out.ReadinessHealthCheckInterval
		*out = new(uint)
		**out = **in
	}
	if in.ReadinessHealthCheckInvocationTimeout != nil {
		in, out := &in.ReadinessHealthCheckInvocationTimeout, &out.ReadinessHealthCheckInvocationTimeout
		*out = new(uint)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadinessHealthCheckConfiguration.
func (in *ReadinessHealthCheckConfiguration) DeepCopy() *ReadinessHealthCheckConfiguration {
	if in == nil {
		return nil
	}
	out := new(ReadinessHealthCheckConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Resource) DeepCopyInto(out *Resource) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Resource.
func (in *Resource) DeepCopy() *Resource {
	if in == nil {
		return nil
	}
	out := new(Resource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceMetadata) DeepCopyInto(out *ResourceMetadata) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceMetadata.
func (in *ResourceMetadata) DeepCopy() *ResourceMetadata {
	if in == nil {
		return nil
	}
	out := new(ResourceMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleAssignments) DeepCopyInto(out *RoleAssignments) {
	*out = *in
	if in.AssignedRoles != nil {
		in, out := &in.AssignedRoles, &out.AssignedRoles
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleAssignments.
func (in *RoleAssignments) DeepCopy() *RoleAssignments {
	if in == nil {
		return nil
	}
	out := new(RoleAssignments)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RotationParameters) DeepCopyInto(out *RotationParameters) {
	*out = *in
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(metav1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RotationParameters.
func (in *RotationParameters) DeepCopy() *RotationParameters {
	if in == nil {
		return nil
	}
	out := new(RotationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Route) DeepCopyInto(out *Route) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Route.
func (in *Route) DeepCopy() *Route {
	if in == nil {
		return nil
	}
	out := new(Route)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Route) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteConfiguration) DeepCopyInto(out *RouteConfiguration) {
	*out = *in
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Route != nil {
		in, out := &in.Route, &out.Route
		*out = new(string)
		**out = **in
	}
	if in.RouteRef != nil {
		in, out := &in.RouteRef, &out.RouteRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteSelector != nil {
		in, out := &in.RouteSelector, &out.RouteSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteConfiguration.
func (in *RouteConfiguration) DeepCopy() *RouteConfiguration {
	if in == nil {
		return nil
	}
	out := new(RouteConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteDestination) DeepCopyInto(out *RouteDestination) {
	*out = *in
	if in.App != nil {
		in, out := &in.App, &out.App
		*out = new(RouteDestinationApp)
		(*in).DeepCopyInto(*out)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteDestination.
func (in *RouteDestination) DeepCopy() *RouteDestination {
	if in == nil {
		return nil
	}
	out := new(RouteDestination)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteDestinationApp) DeepCopyInto(out *RouteDestinationApp) {
	*out = *in
	if in.Process != nil {
		in, out := &in.Process, &out.Process
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteDestinationApp.
func (in *RouteDestinationApp) DeepCopy() *RouteDestinationApp {
	if in == nil {
		return nil
	}
	out := new(RouteDestinationApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteList) DeepCopyInto(out *RouteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Route, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteList.
func (in *RouteList) DeepCopy() *RouteList {
	if in == nil {
		return nil
	}
	out := new(RouteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteObservation) DeepCopyInto(out *RouteObservation) {
	*out = *in
	in.Resource.DeepCopyInto(&out.Resource)
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(RouteOptions)
		**out = **in
	}
	if in.Destinations != nil {
		in, out := &in.Destinations, &out.Destinations
		*out = make([]RouteDestination, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteObservation.
func (in *RouteObservation) DeepCopy() *RouteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteOptions) DeepCopyInto(out *RouteOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteOptions.
func (in *RouteOptions) DeepCopy() *RouteOptions {
	if in == nil {
		return nil
	}
	out := new(RouteOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteParameters) DeepCopyInto(out *RouteParameters) {
	*out = *in
	in.SpaceReference.DeepCopyInto(&out.SpaceReference)
	in.DomainReference.DeepCopyInto(&out.DomainReference)
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(RouteOptions)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteParameters.
func (in *RouteParameters) DeepCopy() *RouteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteSpec) DeepCopyInto(out *RouteSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteSpec.
func (in *RouteSpec) DeepCopy() *RouteSpec {
	if in == nil {
		return nil
	}
	out := new(RouteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteStatus) DeepCopyInto(out *RouteStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteStatus.
func (in *RouteStatus) DeepCopy() *RouteStatus {
	if in == nil {
		return nil
	}
	out := new(RouteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SCBResource) DeepCopyInto(out *SCBResource) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SCBResource.
func (in *SCBResource) DeepCopy() *SCBResource {
	if in == nil {
		return nil
	}
	out := new(SCBResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBindingConfiguration) DeepCopyInto(out *ServiceBindingConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceInstanceRef != nil {
		in, out := &in.ServiceInstanceRef, &out.ServiceInstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceInstanceSelector != nil {
		in, out := &in.ServiceInstanceSelector, &out.ServiceInstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	in.Parameters.DeepCopyInto(&out.Parameters)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBindingConfiguration.
func (in *ServiceBindingConfiguration) DeepCopy() *ServiceBindingConfiguration {
	if in == nil {
		return nil
	}
	out := new(ServiceBindingConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceCredentialBinding) DeepCopyInto(out *ServiceCredentialBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceCredentialBinding.
func (in *ServiceCredentialBinding) DeepCopy() *ServiceCredentialBinding {
	if in == nil {
		return nil
	}
	out := new(ServiceCredentialBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceCredentialBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceCredentialBindingList) DeepCopyInto(out *ServiceCredentialBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceCredentialBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceCredentialBindingList.
func (in *ServiceCredentialBindingList) DeepCopy() *ServiceCredentialBindingList {
	if in == nil {
		return nil
	}
	out := new(ServiceCredentialBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceCredentialBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceCredentialBindingObservation) DeepCopyInto(out *ServiceCredentialBindingObservation) {
	*out = *in
	in.SCBResource.DeepCopyInto(&out.SCBResource)
	if in.LastOperation != nil {
		in, out := &in.LastOperation, &out.LastOperation
		*out = new(LastOperation)
		**out = **in
	}
	if in.RetiredKeys != nil {
		in, out := &in.RetiredKeys, &out.RetiredKeys
		*out = make([]*SCBResource, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(SCBResource)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceCredentialBindingObservation.
func (in *ServiceCredentialBindingObservation) DeepCopy() *ServiceCredentialBindingObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceCredentialBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceCredentialBindingParameters) DeepCopyInto(out *ServiceCredentialBindingParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceInstance != nil {
		in, out := &in.ServiceInstance, &out.ServiceInstance
		*out = new(string)
		**out = **in
	}
	if in.ServiceInstanceRef != nil {
		in, out := &in.ServiceInstanceRef, &out.ServiceInstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceInstanceSelector != nil {
		in, out := &in.ServiceInstanceSelector, &out.ServiceInstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.App != nil {
		in, out := &in.App, &out.App
		*out = new(string)
		**out = **in
	}
	if in.AppRef != nil {
		in, out := &in.AppRef, &out.AppRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppSelector != nil {
		in, out := &in.AppSelector, &out.AppSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.ParametersSecretRef != nil {
		in, out := &in.ParametersSecretRef, &out.ParametersSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.Rotation != nil {
		in, out := &in.Rotation, &out.Rotation
		*out = new(RotationParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceCredentialBindingParameters.
func (in *ServiceCredentialBindingParameters) DeepCopy() *ServiceCredentialBindingParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceCredentialBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceCredentialBindingSpec) DeepCopyInto(out *ServiceCredentialBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceCredentialBindingSpec.
func (in *ServiceCredentialBindingSpec) DeepCopy() *ServiceCredentialBindingSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceCredentialBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceCredentialBindingStatus) DeepCopyInto(out *ServiceCredentialBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceCredentialBindingStatus.
func (in *ServiceCredentialBindingStatus) DeepCopy() *ServiceCredentialBindingStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceCredentialBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceInstance) DeepCopyInto(out *ServiceInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceInstance.
func (in *ServiceInstance) DeepCopy() *ServiceInstance {
	if in == nil {
		return nil
	}
	out := new(ServiceInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceInstanceList) DeepCopyInto(out *ServiceInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceInstanceList.
func (in *ServiceInstanceList) DeepCopy() *ServiceInstanceList {
	if in == nil {
		return nil
	}
	out := new(ServiceInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceInstanceObservation) DeepCopyInto(out *ServiceInstanceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Space != nil {
		in, out := &in.Space, &out.Space
		*out = new(string)
		**out = **in
	}
	if in.ServicePlan != nil {
		in, out := &in.ServicePlan, &out.ServicePlan
		*out = new(string)
		**out = **in
	}
	in.Parameters.DeepCopyInto(&out.Parameters)
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	if in.LastAsyncJob != nil {
		in, out := &in.LastAsyncJob, &out.LastAsyncJob
		*out = new(string)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	out.LastOperation = in.LastOperation
	in.MaintenanceInfo.DeepCopyInto(&out.MaintenanceInfo)
	if in.DashboardURL != nil {
		in, out := &in.DashboardURL, &out.DashboardURL
		*out = new(string)
		**out = **in
	}
	if in.RouteServiceURL != nil {
		in, out := &in.RouteServiceURL, &out.RouteServiceURL
		*out = new(string)
		**out = **in
	}
	if in.SyslogDrainURL != nil {
		in, out := &in.SyslogDrainURL, &out.SyslogDrainURL
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.UpgradeAvailable != nil {
		in, out := &in.UpgradeAvailable, &out.UpgradeAvailable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceInstanceObservation.
func (in *ServiceInstanceObservation) DeepCopy() *ServiceInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceInstanceParameters) DeepCopyInto(out *ServiceInstanceParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	in.SpaceReference.DeepCopyInto(&out.SpaceReference)
	in.Managed.DeepCopyInto(&out.Managed)
	in.UserProvided.DeepCopyInto(&out.UserProvided)
	in.Timeouts.DeepCopyInto(&out.Timeouts)
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceInstanceParameters.
func (in *ServiceInstanceParameters) DeepCopy() *ServiceInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceInstanceSpec) DeepCopyInto(out *ServiceInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceInstanceSpec.
func (in *ServiceInstanceSpec) DeepCopy() *ServiceInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceInstanceStatus) DeepCopyInto(out *ServiceInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceInstanceStatus.
func (in *ServiceInstanceStatus) DeepCopy() *ServiceInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlanParameters) DeepCopyInto(out *ServicePlanParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Offering != nil {
		in, out := &in.Offering, &out.Offering
		*out = new(string)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlanParameters.
func (in *ServicePlanParameters) DeepCopy() *ServicePlanParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidecarConfiguration) DeepCopyInto(out *SidecarConfiguration) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = new(string)
		**out = **in
	}
	if in.ProcessTypes != nil {
		in, out := &in.ProcessTypes, &out.ProcessTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(uint)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidecarConfiguration.
func (in *SidecarConfiguration) DeepCopy() *SidecarConfiguration {
	if in == nil {
		return nil
	}
	out := new(SidecarConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Space) DeepCopyInto(out *Space) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Space.
func (in *Space) DeepCopy() *Space {
	if in == nil {
		return nil
	}
	out := new(Space)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Space) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceList) DeepCopyInto(out *SpaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Space, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceList.
func (in *SpaceList) DeepCopy() *SpaceList {
	if in == nil {
		return nil
	}
	out := new(SpaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceMembers) DeepCopyInto(out *SpaceMembers) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceMembers.
func (in *SpaceMembers) DeepCopy() *SpaceMembers {
	if in == nil {
		return nil
	}
	out := new(SpaceMembers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpaceMembers) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceMembersList) DeepCopyInto(out *SpaceMembersList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpaceMembers, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceMembersList.
func (in *SpaceMembersList) DeepCopy() *SpaceMembersList {
	if in == nil {
		return nil
	}
	out := new(SpaceMembersList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpaceMembersList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceMembersParameters) DeepCopyInto(out *SpaceMembersParameters) {
	*out = *in
	in.SpaceReference.DeepCopyInto(&out.SpaceReference)
	in.MemberList.DeepCopyInto(&out.MemberList)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceMembersParameters.
func (in *SpaceMembersParameters) DeepCopy() *SpaceMembersParameters {
	if in == nil {
		return nil
	}
	out := new(SpaceMembersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceMembersSpec) DeepCopyInto(out *SpaceMembersSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceMembersSpec.
func (in *SpaceMembersSpec) DeepCopy() *SpaceMembersSpec {
	if in == nil {
		return nil
	}
	out := new(SpaceMembersSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceMembersStatus) DeepCopyInto(out *SpaceMembersStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceMembersStatus.
func (in *SpaceMembersStatus) DeepCopy() *SpaceMembersStatus {
	if in == nil {
		return nil
	}
	out := new(SpaceMembersStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceObservation) DeepCopyInto(out *SpaceObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.IsolationSegment != nil {
		in, out := &in.IsolationSegment, &out.IsolationSegment
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceObservation.
func (in *SpaceObservation) DeepCopy() *SpaceObservation {
	if in == nil {
		return nil
	}
	out := new(SpaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceParameters) DeepCopyInto(out *SpaceParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsolationSegment != nil {
		in, out := &in.IsolationSegment, &out.IsolationSegment
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	in.OrgReference.DeepCopyInto(&out.OrgReference)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceParameters.
func (in *SpaceParameters) DeepCopy() *SpaceParameters {
	if in == nil {
		return nil
	}
	out := new(SpaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceQuota) DeepCopyInto(out *SpaceQuota) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceQuota.
func (in *SpaceQuota) DeepCopy() *SpaceQuota {
	if in == nil {
		return nil
	}
	out := new(SpaceQuota)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpaceQuota) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceQuotaInitParameters) DeepCopyInto(out *SpaceQuotaInitParameters) {
	*out = *in
	if in.AllowPaidServicePlans != nil {
		in, out := &in.AllowPaidServicePlans, &out.AllowPaidServicePlans
		*out = new(bool)
		**out = **in
	}
	if in.InstanceMemory != nil {
		in, out := &in.InstanceMemory, &out.InstanceMemory
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.OrgRef != nil {
		in, out := &in.OrgRef, &out.OrgRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgSelector != nil {
		in, out := &in.OrgSelector, &out.OrgSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Spaces != nil {
		in, out := &in.Spaces, &out.Spaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SpacesRefs != nil {
		in, out := &in.SpacesRefs, &out.SpacesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpacesSelector != nil {
		in, out := &in.SpacesSelector, &out.SpacesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TotalAppInstances != nil {
		in, out := &in.TotalAppInstances, &out.TotalAppInstances
		*out = new(float64)
		**out = **in
	}
	if in.TotalAppLogRateLimit != nil {
		in, out := &in.TotalAppLogRateLimit, &out.TotalAppLogRateLimit
		*out = new(float64)
		**out = **in
	}
	if in.TotalAppTasks != nil {
		in, out := &in.TotalAppTasks, &out.TotalAppTasks
		*out = new(float64)
		**out = **in
	}
	if in.TotalMemory != nil {
		in, out := &in.TotalMemory, &out.TotalMemory
		*out = new(float64)
		**out = **in
	}
	if in.TotalRoutePorts != nil {
		in, out := &in.TotalRoutePorts, &out.TotalRoutePorts
		*out = new(float64)
		**out = **in
	}
	if in.TotalRoutes != nil {
		in, out := &in.TotalRoutes, &out.TotalRoutes
		*out = new(float64)
		**out = **in
	}
	if in.TotalServiceKeys != nil {
		in, out := &in.TotalServiceKeys, &out.TotalServiceKeys
		*out = new(float64)
		**out = **in
	}
	if in.TotalServices != nil {
		in, out := &in.TotalServices, &out.TotalServices
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceQuotaInitParameters.
func (in *SpaceQuotaInitParameters) DeepCopy() *SpaceQuotaInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpaceQuotaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceQuotaList) DeepCopyInto(out *SpaceQuotaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpaceQuota, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceQuotaList.
func (in *SpaceQuotaList) DeepCopy() *SpaceQuotaList {
	if in == nil {
		return nil
	}
	out := new(SpaceQuotaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpaceQuotaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceQuotaObservation) DeepCopyInto(out *SpaceQuotaObservation) {
	*out = *in
	if in.AllowPaidServicePlans != nil {
		in, out := &in.AllowPaidServicePlans, &out.AllowPaidServicePlans
		*out = new(bool)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceMemory != nil {
		in, out := &in.InstanceMemory, &out.InstanceMemory
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.Spaces != nil {
		in, out := &in.Spaces, &out.Spaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TotalAppInstances != nil {
		in, out := &in.TotalAppInstances, &out.TotalAppInstances
		*out = new(float64)
		**out = **in
	}
	if in.TotalAppLogRateLimit != nil {
		in, out := &in.TotalAppLogRateLimit, &out.TotalAppLogRateLimit
		*out = new(float64)
		**out = **in
	}
	if in.TotalAppTasks != nil {
		in, out := &in.TotalAppTasks, &out.TotalAppTasks
		*out = new(float64)
		**out = **in
	}
	if in.TotalMemory != nil {
		in, out := &in.TotalMemory, &out.TotalMemory
		*out = new(float64)
		**out = **in
	}
	if in.TotalRoutePorts != nil {
		in, out := &in.TotalRoutePorts, &out.TotalRoutePorts
		*out = new(float64)
		**out = **in
	}
	if in.TotalRoutes != nil {
		in, out := &in.TotalRoutes, &out.TotalRoutes
		*out = new(float64)
		**out = **in
	}
	if in.TotalServiceKeys != nil {
		in, out := &in.TotalServiceKeys, &out.TotalServiceKeys
		*out = new(float64)
		**out = **in
	}
	if in.TotalServices != nil {
		in, out := &in.TotalServices, &out.TotalServices
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceQuotaObservation.
func (in *SpaceQuotaObservation) DeepCopy() *SpaceQuotaObservation {
	if in == nil {
		return nil
	}
	out := new(SpaceQuotaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceQuotaParameters) DeepCopyInto(out *SpaceQuotaParameters) {
	*out = *in
	if in.AllowPaidServicePlans != nil {
		in, out := &in.AllowPaidServicePlans, &out.AllowPaidServicePlans
		*out = new(bool)
		**out = **in
	}
	if in.InstanceMemory != nil {
		in, out := &in.InstanceMemory, &out.InstanceMemory
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.OrgRef != nil {
		in, out := &in.OrgRef, &out.OrgRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgSelector != nil {
		in, out := &in.OrgSelector, &out.OrgSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Spaces != nil {
		in, out := &in.Spaces, &out.Spaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SpacesRefs != nil {
		in, out := &in.SpacesRefs, &out.SpacesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpacesSelector != nil {
		in, out := &in.SpacesSelector, &out.SpacesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TotalAppInstances != nil {
		in, out := &in.TotalAppInstances, &out.TotalAppInstances
		*out = new(float64)
		**out = **in
	}
	if in.TotalAppLogRateLimit != nil {
		in, out := &in.TotalAppLogRateLimit, &out.TotalAppLogRateLimit
		*out = new(float64)
		**out = **in
	}
	if in.TotalAppTasks != nil {
		in, out := &in.TotalAppTasks, &out.TotalAppTasks
		*out = new(float64)
		**out = **in
	}
	if in.TotalMemory != nil {
		in, out := &in.TotalMemory, &out.TotalMemory
		*out = new(float64)
		**out = **in
	}
	if in.TotalRoutePorts != nil {
		in, out := &in.TotalRoutePorts, &out.TotalRoutePorts
		*out = new(float64)
		**out = **in
	}
	if in.TotalRoutes != nil {
		in, out := &in.TotalRoutes, &out.TotalRoutes
		*out = new(float64)
		**out = **in
	}
	if in.TotalServiceKeys != nil {
		in, out := &in.TotalServiceKeys, &out.TotalServiceKeys
		*out = new(float64)
		**out = **in
	}
	if in.TotalServices != nil {
		in, out := &in.TotalServices, &out.TotalServices
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceQuotaParameters.
func (in *SpaceQuotaParameters) DeepCopy() *SpaceQuotaParameters {
	if in == nil {
		return nil
	}
	out := new(SpaceQuotaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceQuotaSpec) DeepCopyInto(out *SpaceQuotaSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceQuotaSpec.
func (in *SpaceQuotaSpec) DeepCopy() *SpaceQuotaSpec {
	if in == nil {
		return nil
	}
	out := new(SpaceQuotaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceQuotaStatus) DeepCopyInto(out *SpaceQuotaStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceQuotaStatus.
func (in *SpaceQuotaStatus) DeepCopy() *SpaceQuotaStatus {
	if in == nil {
		return nil
	}
	out := new(SpaceQuotaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceReference) DeepCopyInto(out *SpaceReference) {
	*out = *in
	if in.Space != nil {
		in, out := &in.Space, &out.Space
		*out = new(string)
		**out = **in
	}
	if in.SpaceName != nil {
		in, out := &in.SpaceName, &out.SpaceName
		*out = new(string)
		**out = **in
	}
	if in.OrgName != nil {
		in, out := &in.OrgName, &out.OrgName
		*out = new(string)
		**out = **in
	}
	if in.SpaceRef != nil {
		in, out := &in.SpaceRef, &out.SpaceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpaceSelector != nil {
		in, out := &in.SpaceSelector, &out.SpaceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceReference.
func (in *SpaceReference) DeepCopy() *SpaceReference {
	if in == nil {
		return nil
	}
	out := new(SpaceReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceRole) DeepCopyInto(out *SpaceRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceRole.
func (in *SpaceRole) DeepCopy() *SpaceRole {
	if in == nil {
		return nil
	}
	out := new(SpaceRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpaceRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceRoleList) DeepCopyInto(out *SpaceRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpaceRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceRoleList.
func (in *SpaceRoleList) DeepCopy() *SpaceRoleList {
	if in == nil {
		return nil
	}
	out := new(SpaceRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpaceRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceRoleObservation) DeepCopyInto(out *SpaceRoleObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceRoleObservation.
func (in *SpaceRoleObservation) DeepCopy() *SpaceRoleObservation {
	if in == nil {
		return nil
	}
	out := new(SpaceRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceRoleParameters) DeepCopyInto(out *SpaceRoleParameters) {
	*out = *in
	in.SpaceReference.DeepCopyInto(&out.SpaceReference)
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceRoleParameters.
func (in *SpaceRoleParameters) DeepCopy() *SpaceRoleParameters {
	if in == nil {
		return nil
	}
	out := new(SpaceRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceRoleSpec) DeepCopyInto(out *SpaceRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceRoleSpec.
func (in *SpaceRoleSpec) DeepCopy() *SpaceRoleSpec {
	if in == nil {
		return nil
	}
	out := new(SpaceRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceRoleStatus) DeepCopyInto(out *SpaceRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceRoleStatus.
func (in *SpaceRoleStatus) DeepCopy() *SpaceRoleStatus {
	if in == nil {
		return nil
	}
	out := new(SpaceRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceSpec) DeepCopyInto(out *SpaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceSpec.
func (in *SpaceSpec) DeepCopy() *SpaceSpec {
	if in == nil {
		return nil
	}
	out := new(SpaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceStatus) DeepCopyInto(out *SpaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceStatus.
func (in *SpaceStatus) DeepCopy() *SpaceStatus {
	if in == nil {
		return nil
	}
	out := new(SpaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeoutsParameters) DeepCopyInto(out *TimeoutsParameters) {
	*out = *in
	if in.Create != nil {
		in, out := &in.Create, &out.Create
		*out = new(string)
		**out = **in
	}
	if in.Delete != nil {
		in, out := &in.Delete, &out.Delete
		*out = new(string)
		**out = **in
	}
	if in.Update != nil {
		in, out := &in.Update, &out.Update
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeoutsParameters.
func (in *TimeoutsParameters) DeepCopy() *TimeoutsParameters {
	if in == nil {
		return nil
	}
	out := new(TimeoutsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProvided) DeepCopyInto(out *UserProvided) {
	*out = *in
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.JSONCredentials != nil {
		in, out := &in.JSONCredentials, &out.JSONCredentials
		*out = new(string)
		**out = **in
	}
	if in.CredentialsSecretRef != nil {
		in, out := &in.CredentialsSecretRef, &out.CredentialsSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProvided.
func (in *UserProvided) DeepCopy() *UserProvided {
	if in == nil {
		return nil
	}
	out := new(UserProvided)
	in.DeepCopyInto(out)
	return out
}
