/*
Copyright 2023 SAP SE.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SpaceObservation struct {

	// (Boolean) Allows SSH to application containers via the CF CLI.
	// Allows SSH to application containers via the CF CLI.
	AllowSSH bool `json:"allowSsh,omitempty" tf:"allow_ssh,omitempty"`

	// (Map of String) The annotations associated with Cloud Foundry resources. Add as described here.
	// The annotations associated with Cloud Foundry resources. Add as described [here](https://docs.cloudfoundry.org/adminguide/metadata.html#-view-metadata-for-an-object).
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// (String) The date and time when the resource was created in RFC3339 format.
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (String) The GUID of the object.
	ID string `json:"id,omitempty"`

	// (String) The ID of the isolation segment to assign to the space. The isolation segment must be entitled to the space's parent organization
	// The ID of the isolation segment to assign to the space. The isolation segment must be entitled to the space's parent organization
	IsolationSegment *string `json:"isolationSegment,omitempty" tf:"isolation_segment,omitempty"`

	// (Map of String) The labels associated with Cloud Foundry resources. Add as described here.
	// The labels associated with Cloud Foundry resources. Add as described [here](https://docs.cloudfoundry.org/adminguide/metadata.html#-view-metadata-for-an-object).
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String) The name of the Space in Cloud Foundry
	// The name of the Space in Cloud Foundry
	Name string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The ID of the Org within which to create the space
	// The ID of the Org within which to create the space
	Org string `json:"org,omitempty" tf:"org,omitempty"`

	// (String) The space quota applied to the space. To assign a space quota, use the space quota resource instead.
	// The space quota applied to the space. To assign a space quota, use the space quota resource instead.
	Quota *string `json:"quota,omitempty" tf:"quota,omitempty"`

	// (String) The date and time when the resource was updated in RFC3339 format.
	// The date and time when the resource was updated in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type SpaceParameters struct {

	// (Boolean) Allows SSH to application containers via the CF CLI.
	// Allows SSH to application containers via the CF CLI.
	// +kubebuilder:validation:Optional
	// +kubebuilder:default=false
	AllowSSH bool `json:"allowSsh,omitempty" tf:"allow_ssh,omitempty"`

	// (Map of String) The annotations associated with Cloud Foundry resources. Add as described here.
	// The annotations associated with Cloud Foundry resources. Add as described [here](https://docs.cloudfoundry.org/adminguide/metadata.html#-view-metadata-for-an-object).
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// (String) The ID of the isolation segment to assign to the space. The isolation segment must be entitled to the space's parent organization
	// The ID of the isolation segment to assign to the space. The isolation segment must be entitled to the space's parent organization
	// +kubebuilder:validation:Optional
	IsolationSegment *string `json:"isolationSegment,omitempty" tf:"isolation_segment,omitempty"`

	// (Map of String) The labels associated with Cloud Foundry resources. Add as described here.
	// The labels associated with Cloud Foundry resources. Add as described [here](https://docs.cloudfoundry.org/adminguide/metadata.html#-view-metadata-for-an-object).
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String) The name of the Space in Cloud Foundry
	// The name of the Space in Cloud Foundry
	// +kubebuilder:validation:Required
	Name string `json:"name,omitempty" tf:"name,omitempty"`

	OrgReference `json:",inline"`
}

// SpaceSpec defines the desired state of Space
type SpaceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SpaceParameters `json:"forProvider"`

}

// SpaceStatus defines the observed state of Space.
type SpaceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SpaceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Space is the Schema for the Spaces API. Provides a Cloud Foundry resource for managing Cloud Foundry spaces within organizations.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudfoundry}
type Space struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   SpaceSpec   `json:"spec"`
	Status SpaceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SpaceList contains a list of Spaces
type SpaceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Space `json:"items"`
}

// Repository type metadata.
var (
	Space_Kind             = "Space"
	Space_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Space_Kind}.String()
	Space_KindAPIVersion   = Space_Kind + "." + CRDGroupVersion.String()
	Space_GroupVersionKind = CRDGroupVersion.WithKind(Space_Kind)
)

func init() {
	SchemeBuilder.Register(&Space{}, &SpaceList{})
}

// GetID returns ID of external resource managed by this CR.
func (r *Space) GetID() string {
	return r.Status.AtProvider.ID
}

// implement OrgScoped interface
func (s *Space) GetOrgRef() *OrgReference {
	return &s.Spec.ForProvider.OrgReference
}
