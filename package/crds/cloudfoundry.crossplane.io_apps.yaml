---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: apps.cloudfoundry.crossplane.io
spec:
  group: cloudfoundry.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - cloudfoundry
    kind: App
    listKind: AppList
    plural: apps
    singular: app
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: App is the Schema for the Apps API. Provides a Cloud Foundry
          resource to manage applications.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AppSpec defines the desired state of App
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: (Map of String) The annotations associated with the
                      resource. Add as described [here](https://docs.cloudfoundry.org/adminguide/metadata.html#-view-metadata-for-an-object).
                    type: object
                  buildpacks:
                    description: (NOT SUPPORTED YET) An array of one ore more installed
                      buildpack names, e.g., ruby_buildpack, java_buildpack.
                    items:
                      type: string
                    type: array
                  default-route:
                    description: When set to true, a route for the app will be created
                      using the app name as the hostname and the containing org's
                      default domain as the domain. Ignored if routes are specified
                      or if no-route is set to true.
                    type: boolean
                  docker:
                    description: Specifies docker image and optional docker credentials
                      when lifecycle is set to docker
                    properties:
                      credentialsSecretRef:
                        description: (Attributes) Defines login credentials for private
                          docker repositories
                        properties:
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      image:
                        description: The URL to the docker image with tag e.g registry.example.com:5000/user/repository/tag
                          or docker image name from the public repo e.g. redis:4.0
                        type: string
                    type: object
                  environment:
                    description: (NOT SUPPORTED YET) A key-value mapping of environment
                      variables to be used for the app when running
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  labels:
                    additionalProperties:
                      type: string
                    description: (Map of String) The labels associated with the resource.
                      Add as described [here](https://docs.cloudfoundry.org/adminguide/metadata.html#-view-metadata-for-an-object).
                    type: object
                  lifecycle:
                    default: buildpack
                    description: Type of the lifecycle; valid values are `buildpack`,
                      `cnb`, `docker`
                    enum:
                    - buildpack
                    - cnb
                    - docker
                    type: string
                  log-rate-limit-per-second:
                    description: 'The log rate limit for all instances of an app.
                      This attribute requires a unit of measurement: B, K, KB, M,
                      MB, G, or GB, in either uppercase or lowercase.'
                    type: string
                  name:
                    description: The `name` of the application.
                    type: string
                  no-route:
                    description: When set to true, any routes configuration specified
                      in the manifest will be ignored and any existing routes will
                      be removed.
                    type: boolean
                  orgName:
                    description: (String) The name of the Cloud Foundry organization
                      containing the space.
                    type: string
                  path:
                    description: (NOT SUPPORTED YET) The path to the app directory
                      or zip file to push.
                    type: string
                  processes:
                    description: Configures multiple processes to run for an App.
                      For example, a web application may have a web UI process and
                      a worker process.
                    items:
                      description: ProcessConfiguration defines the process-level
                        configuration  for the application
                      properties:
                        command:
                          description: The command used to start the process.
                          type: string
                        diskQuota:
                          description: The disk limit for all instance of the web
                            process type. This attribute requires a unit of measurement,
                            such as M, MB, G, GB, T, or TB in upper case or lower
                            case.
                          type: string
                        health-check-http-endpoint:
                          description: The endpoint called to determine if the app
                            is healthy
                          type: string
                        health-check-interval:
                          description: The interval in seconds between health checks
                          type: integer
                        health-check-invocation-timeout:
                          description: Timeout in seconds for individual health check
                            requests
                          type: integer
                        health-check-type:
                          description: The type of health check to perform, either
                            http or tcp or process.
                          enum:
                          - http
                          - port
                          - process
                          type: string
                        instances:
                          description: The number of instances of the process to run.
                          type: integer
                        memory:
                          description: The amount of memory allocated to each instance
                            of the process. This attribute requires a unit of measurement,
                            such as M, MB, G, GB, T, or TB in upper case or lower
                            case.
                          type: string
                        timeout:
                          description: Timeout in seconds at which the health check
                            is considered a failure
                          type: integer
                        type:
                          description: The identifier for the process to be configured.
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  random-route:
                    description: When set to true, a random route will be created
                      and mapped to the application. Ignored if routes are specified,
                      or if no-route is set to true.
                    type: boolean
                  readiness-health-check-http-endpoint:
                    description: The endpoint called to determine if the app is ready
                    type: string
                  readiness-health-check-interval:
                    description: The interval in seconds between readiness health
                      checks
                    type: integer
                  readiness-health-check-invocation-timeout:
                    description: Timeout in seconds for individual readiness health
                      check requests
                    type: integer
                  readiness-health-check-type:
                    description: The type of readiness health check to perform, either
                      http or tcp or process.
                    enum:
                    - http
                    - port
                    - process
                    type: string
                  routes:
                    description: (NOT SUPPORTED YET) The routes to map to the application
                      to control its ingress traffic.
                    items:
                      description: RouteConfiguration defines the route for the application
                      properties:
                        protocol:
                          description: (Number) The port of the application to map
                            the tcp route to.
                          type: string
                        route:
                          description: The route id. Route can be defined using the
                            cloudfoundry_route resource
                          type: string
                        routeRef:
                          description: Reference to a Route in route to populate route.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        routeSelector:
                          description: Selector for a Route in route to populate route.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  services:
                    description: (NOT SUPPORTED YET) Service instances to bind to
                      the application.
                    items:
                      description: ServiceBindingConfiguration defines the service
                        instance to bind to the application
                      properties:
                        binding_name:
                          description: The name of the service instance to bind to
                            the application.
                          type: string
                        name:
                          description: The name of the service instance to be bound
                            to.
                          type: string
                        parameters:
                          description: A map of arbitrary key/value paris to be send
                            to the service broker during binding
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        serviceInstanceRef:
                          description: Reference to a ServiceInstance in service to
                            populate serviceInstance.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        serviceInstanceSelector:
                          description: Selector for a ServiceInstance in service to
                            populate serviceInstance.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  space:
                    description: (String) The GUID of the Cloud Foundry space. This
                      field is typically populated using references specified in `spaceRef`,
                      `spaceSelector`, or `spaceName`.
                    type: string
                  spaceName:
                    description: (String) The name of the Cloud Foundry space to lookup
                      the GUID of the space. Use `spaceName` only when the referenced
                      space is not managed by Crossplane.
                    type: string
                  spaceRef:
                    description: (Attributes) Reference to a `Space` CR to lookup
                      the GUID of the Cloud Foundry space. Preferred if the referenced
                      space is managed by Crossplane.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  spaceSelector:
                    description: (Attributes) Selector for a `Space` CR to lookup
                      the GUID of the Cloud Foundry space. Preferred if the referenced
                      space is managed by Crossplane.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  stack:
                    description: (NOT SUPPORTED YET) The root filesystem to use with
                      the buildpack, for example, cflinuxfs4.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AppStatus defines the observed state of App.
            properties:
              atProvider:
                properties:
                  appManifest:
                    description: The yaml representation of the environment variables.
                    type: string
                  createdAt:
                    description: (String) The date and time when the resource was
                      created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
                    type: string
                  guid:
                    description: (String) The GUID of the Cloud Foundry resource.
                    type: string
                  name:
                    description: The `name` of the application.
                    type: string
                  state:
                    description: the `state` of the application.
                    type: string
                  updatedAt:
                    description: (String) The date and time when the resource was
                      updated in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
